# ------------------------------------------------------------------------------
# <auto-generated>
#
#     This code was generated.
#
#     - To turn off auto-generation set:
#
#         [CustomGithubActions (AutoGenerate = false)]
#
#     - To trigger manual generation invoke:
#
#         nuke --generate-configuration GitHubActions_Release --host GitHubActions
#
# </auto-generated>
# ------------------------------------------------------------------------------

name: Release

on:
  workflow_dispatch:
    inputs:
      ElasticProvider:
        description: "Elastic Provider"
        required: true
      MongoProvider:
        description: "Mongo Provider"
        required: true
      MsSqlProvider:
        description: "Ms Sql Provider"
        required: true
      MySqlProvider:
        description: "My Sql Provider"
        required: true
      PostgresProvider:
        description: "Postgres Provider"
        required: true
      Ui:
        description: "Ui"
        required: true

jobs:
  ubuntu-latest:
    name: ubuntu-latest
    runs-on: ubuntu-latest
    steps:

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: 'Cache: .nuke/temp, ~/.nuget/packages'
        uses: actions/cache@v3
        with:
          path: |
            .nuke/temp
            ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('**/global.json', '**/*.csproj', '**/Directory.Packages.props') }}
      - name: 'Run: Publish'
        run: ./build.cmd Publish
        env:
          ElasticProvider: ${{ github.event.inputs.ElasticProvider }}
          MongoProvider: ${{ github.event.inputs.MongoProvider }}
          MsSqlProvider: ${{ github.event.inputs.MsSqlProvider }}
          MySqlProvider: ${{ github.event.inputs.MySqlProvider }}
          PostgresProvider: ${{ github.event.inputs.PostgresProvider }}
          Ui: ${{ github.event.inputs.Ui }}
          SonarTokenUi: ${{ secrets.SONAR_TOKEN_UI }}
          SonarToken: ${{ secrets.SONAR_TOKEN }}
          NugetApiKey: ${{ secrets.NUGET_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: phoenix-actions/test-reporting@v14
        if: always()
        with:
          name: DotNET - Tests
          output-to: checks
          path: '**/test-results.trx'
          reporter: dotnet-trx
          fail-on-error: false

      - name: SonarCloud run
        uses: SonarSource/sonarcloud-github-action@master
        if: github.event_name != 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_UI }}
        with:
          args: >
            -Dsonar.organization=followynne
            -Dsonar.projectKey=followynne_serilog-ui_assets
            -Dsonar.sources=src/Serilog.Ui.Web/src/
            -Dsonar.tests=src/Serilog.Ui.Web/src/
            -Dsonar.exclusions=src/Serilog.Ui.Web/src/__tests__/**/*,src/Serilog.Ui.Web/src/mockServiceWorker.*,src/Serilog.Ui.Web/src/style/**/*
            -Dsonar.test.inclusions=src/Serilog.Ui.Web/src/__tests__/**/*
            -Dsonar.javascript.lcov.reportPaths=./src/Serilog.Ui.Web/src/reports/coverage/lcov.info

      - uses: phoenix-actions/test-reporting@v14
        if: always()
        with:
          name: JS - Tests
          output-to: checks
          path: '**/test-junit-report.xml'
          reporter: jest-junit
          fail-on-error: false
